# Rules to build hugo sites in linux containers using podman
#
# All Hugo instances in this ruleset run in ephemeral OCI containers originated
# from a common base.
# Main project directory (PROJECT_ROOT) is shared with containers via bind mount,
# so containerized processes can access project files at `/mnt/projectRoot`

# PUBLIC VARIABLE DEFAULTS

HUGO_CTN_IMAGE ?= docker.io/klakegg/hugo:0.101.0-ext-asciidoctor

define HUGO_SERVER_OPTIONS ?=
	--noHTTPCache
	--disableFastRender
endef

## Extra options to append to Hugo cmdline
HUGO_EXTRA_OPTIONS ?= # Empty on purpose

# INTERNAL VARIABLES

hugoBuildDir = $(BUILD_DIR)/hugo
hugoSrcDir   = $(SRCDIR)/hugo
hugoSources := $(shell $(FIND) $(hugoSrcDir) -type f )

# Options for the container engine that runs Hugo
define hugoCtnOptions :=
	--rm
	-v "$(PROJECT_ROOT):/mnt/projectRoot"
	--workdir /mnt/projectRoot
endef

# Base options common to all Hugo instances
define hugoBaseOptions :=
	-s /mnt/projectRoot/$(hugoSrcDir)
	-d /mnt/projectRoot/$(hugoBuildDir)
endef

# Hugo build dependencies
define hugoBuildDeps :=
	$(hugoSources)
	$(BUILD_DIR)/.buildinfo.json
	lib/cv/build/cv.toml
endef

define hugoMultilineMakeVars :=
	HUGO_SERVER_OPTIONS HUGO_EXTRA_OPTIONS hugoCtnOptions hugoBaseOptions
	hugoBuildDeps
endef

# Pre-strip multi line variables to avoid shell parsing issues
$(foreach v,$(hugoMultilineMakeVars),$(eval $(v) := $$(strip $$($v))))

# PUBLIC TARGETS

##
# @target hugo.server
# @brief Launch Hugo integrated development server
#
# The instantiated container has network isolation disabled, so the server
# is accessible without further shenanigans.
#
.SILENT .PHONY: hugo.server
hugo.server: $(hugoBuildDeps)

	cat <<-EOF
		WARNING: This server can't trigger rebuild of extra-hugo files, so some
		dependencies will only be updated on server restart

	EOF

	exec podman run --net host \
		$(hugoCtnOptions) '$(HUGO_CTN_IMAGE)' $(hugoBaseOptions) \
		server $(HUGO_SERVER_OPTIONS) $(HUGO_EXTRA_OPTIONS)

# INTERNAL TARGETS

# General Hugo build recipe
#
# In general any file that exists in $(BUILD_DIR)/hugo must be built calling
# Hugo. Some files that need to be externally generated are listed as
# dependencies.
#
$(BUILD_DIR)/hugo/%: $(hugoBuildDeps)

	@ exec podman run \
		$(hugoCtnOptions) '$(HUGO_CTN_IMAGE)' $(hugoBaseOptions) \
		$(HUGO_EXTRA_OPTIONS)

# This recipe is a little artificial hook to allow other recipes to easily
# depend on the existence of up-to-date Hugo output files.
# `index.html` works as the only dependency because general Hugo rule builds
# the whole site anyway.
#
.SILENT .PHONY: $(hugoBuildDir)/
$(hugoBuildDir)/: $(hugoBuildDir)/index.html
